-- This file was generated using Luraph Obfuscator v13.4.5

return(function(TP,EZ,qP,sZ,jP,CP,zZ,XZ,HZ,FZ,HP,tZ,JZ,uZ,YZ,iZ,UZ,bZ,dZ,RZ,DZ,NZ,ZZ,PZ,nZ,hP,gZ,LP,UP,GZ,TZ,aZ,OZ,xZ,BZ,KP,MZ,qZ,jZ,lZ,WZ,cZ,eZ,AZ,yP,VZ,mP,vZ,QP,hZ,IZ,mZ,oZ,pZ,kZ,rZ,wZ,fZ,SZ,...)local m,q=TZ[jZ],HZ;local U,h=TZ[hZ],mZ;local Q,C=qZ,(XZ);local X,A=TZ[AZ],iZ[VZ];local V,a,n,Z=aZ,nZ,ZZ,(rZ or BZ);local i=pZ;local K,L,T,j,H=cZ,SZ,vZ,kZ,(TZ[zZ]);local r,B=fZ,(PZ);local p=(B and B()or JZ);local LZ,c,S,v=1,NZ,NZ,NZ;repeat do if LZ<=1 then if LZ~=0 then LZ=0;else c={};LZ=3;end;else if LZ~=2 then S=1;do LZ=2;end;else do LZ=4;end;end;end;end;until LZ>=4;LZ=2;local k,z,f,P=NZ,NZ,NZ,(NZ);while LZ<5 do if LZ<=1 then if LZ~=0 then z=tZ;LZ=0;else LZ=3;end;else if LZ<=2 then do LZ=1;end;else if LZ==3 then z=q(H(z,5),FZ,function(Lo)if U(Lo,2)~=72 then local Ib=(h(C(Lo,16)));do if not(f)then return Ib;else local Ef,mf=2,NZ;do while(MZ)do if not(Ef<=0)then if Ef~=1 then mf=m(Ib,f);Ef=0;else return mf;end;else f=NZ;do Ef=1;end;end;end;end;end;end;else f=C(H(Lo,1,1));do return xZ;end;end;end);LZ=4;else P=function()local sk=0;local zk=NZ;while(MZ)do if sk~=0 then S=S+1;break;else do zk=U(z,S,S);end;do sk=1;end;end;end;return zk;end;LZ=5;end;end;end;end;local J=function()local W_,Y_,f_,k_=NZ,NZ,NZ,(NZ);for Gn=0,1 do if Gn~=0 then S=S+4;else W_,Y_,f_,k_=U(z,S,S+3);end;end;return k_*16777216+f_*65536+Y_*256+W_;end;LZ=0;local N,t,F,x,M,R,I,u,E=NZ,NZ,NZ,NZ,NZ,NZ,NZ,NZ,NZ;do while(MZ)do if not(LZ<=4)then do if LZ<=6 then if LZ~=5 then t=4294967296;LZ=5;else F=2^52;LZ=1;end;else do if not(LZ<=7)then if LZ~=8 then do local G1=2;for cA=1,31 do local zA=0;while zA<=1 do do if zA~=0 then G1=G1*2;do zA=2;end;else(M)[cA]=G1;zA=1;end;end;end;end;end;do LZ=8;end;else R=function(Y_,j_,s_)local q_=(1);local J_=(NZ);repeat if not(q_<=0)then if q_~=1 then do return J_;end;else J_=(s_/M[j_])%M[Y_];q_=0;end;else J_=J_-J_%1;q_=2;end;until(RZ);end;LZ=2;end;else u=function()local nK=(J());local qK=(1);local IK,fK,gK,WK,JK=NZ,NZ,NZ,NZ,NZ;do while qK~=7 do if not(qK<=2)then do if not(qK<=4)then if qK~=5 then do if nK==0 and IK==0 then return 0;end;end;qK=5;else fK=(-1)^R(1,31,IK);qK=0;end;else do if qK~=3 then WK=R(20,0,IK)*t+nK;qK=2;else if gK==0 then if WK==0 then do return fK*0;end;else gK=1;do JK=0;end;end;elseif gK~=2047 then else if WK~=0 then do return fK*(1/0);end;else do return fK*(0/0);end;end;end;qK=7;end;end;end;end;else if qK<=0 then do gK=R(11,20,IK);end;do qK=4;end;else do if qK~=1 then JK=1;do qK=3;end;else do IK=J();end;qK=6;end;end;end;end;end;end;return fK*(2^(gK-1023))*(WK/F+JK);end;LZ=4;end;end;end;end;else do if not(LZ<=1)then do if not(LZ<=2)then if LZ~=3 then E={[0]={[0]=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15},{[0]=1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14},{[0]=2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13},{[0]=3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12},{[0]=4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11},{[0]=5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10},{[0]=6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9},{[0]=7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8},{[0]=8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7},{[0]=9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6},{[0]=10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5},{[0]=11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4},{[0]=12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3},{[0]=13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2},{[0]=14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1},{[0]=15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0}};break;else M={[0]=1};LZ=9;end;else I=function()local ao,lo=J(),J();local go=0;repeat do if go~=0 then do return lo*t+ao;end;else if not(lo>=N)then else lo=lo-t;end;go=1;end;end;until(RZ);end;LZ=7;end;end;else if LZ~=0 then x=t-1;LZ=3;else do N=2147483648;end;LZ=6;end;end;end;end;end;end;local O=((IZ or uZ));local d=O and O[EZ]or function(K2,W2)local s2,c2,l2=3,NZ,NZ;while s2<=3 do do if not(s2<=1)then if s2==2 then c2=1;s2=1;else K2=K2%t;do s2=0;end;end;else if s2~=0 then l2=0;s2=4;else do W2=W2%t;end;s2=2;end;end;end;end;for wz=0,1 do if wz~=0 then return l2+K2*c2+W2*c2;else do while K2>0 and W2>0 do local E6,K6=K2%16,W2%16;l2=l2+E[E6][K6]*c2;local L6=2;do while L6<3 do if L6<=0 then W2=(W2-K6)/16;do L6=1;end;else if L6~=1 then K2=(K2-E6)/16;L6=0;else c2=c2*16;L6=3;end;end;end;end;end;end;end;end;end;local l=O and O[OZ]or function(xJ,UJ)do xJ=xJ%t;end;do UJ=UJ%t;end;return((xJ+UJ)-d(xJ,UJ))/2;end;local Y=O and O[dZ]or function(aD,xD)aD=aD%t;do for yV=0,1 do do if yV==0 then xD=xD%t;else return x-l(x-aD,x-xD);end;end;end;end;end;local G=(NZ);local w,o,s=O and O[lZ]or function(WQ)return x-(WQ%t);end,O and O[YZ],O and O[wZ];for Xw=0,2 do do if not(Xw<=0)then do if Xw==1 then do s=s or function(Eg,yg)do if not(yg>=32)then else do return 0;end;end;end;local xg=1;local Sg=(NZ);while(MZ)do if not(xg<=0)then if xg==1 then do if not(yg<0)then else return o(Eg,-yg);end;end;xg=2;else Sg=(Eg%t/M[yg]);xg=0;end;else return Sg-Sg%1;end;end;end;end;else do G=function(vl)local Xl,Gl,Jl,Yl,ml=NZ,NZ,NZ,NZ,(NZ);for Ho=0,4 do do if not(Ho<=1)then if not(Ho<=2)then do if Ho~=3 then do ml=d(Xl[4],k);end;else Yl=d(Xl[3],k);end;end;else Jl=d(Xl[2],k);end;else if Ho~=0 then Gl=d(Xl[1],k);else Xl={U(z,S,S+3)};end;end;end;end;local cl=(0);do repeat if not(cl<=0)then if cl==1 then S=S+4;do cl=2;end;else do return ml*16777216+Yl*65536+Jl*256+Gl;end;end;else k=(133*k+vl)%256;do cl=1;end;end;until(RZ);end;end;end;end;end;else do o=o or function(ru,Ju)local gu=(2);while(MZ)do if not(gu<=0)then if gu~=1 then if not(Ju>=32)then else return 0;end;do gu=1;end;else if not(Ju<0)then else do return s(ru,-Ju);end;end;gu=0;end;else return(ru*M[Ju])%t;end;end;end;end;end;end;end;local D=(NZ);do for Ym=0,1 do if Ym==0 then do D=function(ie)local de,fe,ve=2,NZ,(NZ);while(MZ)do if de<=1 then do if de~=0 then return ve;else do S=S+fe;end;do de=1;end;end;end;else if de<=2 then fe=J();de=4;else if de~=3 then ve=xZ;de=3;else do for P8=1,fe,7997 do local c8=(P8+oZ-1);do if not(c8>fe)then else c8=fe;end;end;local G8,L8=2,(NZ);do while G8~=3 do if not(G8<=0)then do if G8==1 then ve=ve..h(Z(L8));G8=3;else L8={U(z,S+P8-1,S+c8-1)};do G8=0;end;end;end;else for zR=1,#L8 do local GR=0;do while GR<2 do if GR~=0 then v=(ie*v+sZ)%256;GR=2;else(L8)[zR]=d(L8[zR],v);GR=1;end;end;end;end;G8=1;end;end;end;end;end;de=0;end;end;end;end;end;end;else v=P();end;end;end;LZ=1;local W,b,e=NZ,NZ,NZ;repeat do if not(LZ<=1)then if not(LZ<=2)then do if LZ~=3 then do b=function(...)do return Q(GZ,...),{...};end;end;end;LZ=0;else W={};do LZ=2;end;end;end;else for Dv=1,P()do local cv=(NZ);for vC=0,2 do if not(vC<=0)then if vC~=1 then for i5=1,P()do local L5=(1);local e5,R5=NZ,NZ;while L5~=4 do if L5<=1 then if L5~=0 then e5=P();L5=3;else do cv[R5]=R(4,0,e5);end;L5=2;end;else if L5==2 then do(cv)[R5+1]=R(4,4,e5);end;L5=4;else do R5=(i5-1)*2;end;L5=0;end;end;end;end;else(W)[Dv-1]=cv;end;else cv={};end;end;end;do LZ=4;end;end;else if LZ~=0 then k=P();LZ=3;else e={};LZ=5;end;end;end;until LZ>=5;LZ=3;local g,yZ,QZ=NZ,NZ,(NZ);while LZ~=4 do if LZ<=1 then do if LZ==0 then LZ=1;else function QZ(St,et,ft)local ot=St[6];local Lt,rt,it,at=St[1],St[4],St[8],(St[3]);local Zt=(St[7]);local Dt,Ot=St[9],(St[2]);local Pt=(i({},{[DZ]=WZ}));local Gt=NZ;Gt=function(...)local IM=0;local pM=({});local YM=(1);local yM=((B and B()or JZ));local NM=((yM==p and et or yM));local WM,sM=b(...);WM=WM-1;do for CY=0,WM do if not(rt>CY)then break;else pM[CY]=sM[CY+1];end;end;end;(yZ)[3]=St;do yZ[1]=pM;end;do if not Zt then sM=NZ;elseif not(Dt)then else pM[rt]={[bZ]=WM>=rt and WM-rt+1 or 0,Z(sM,rt+1,WM+1)};end;end;if NM~=yM then if not(r)then JZ=NM;else(r)(Gt,NM);end;end;local LM,mM,iM,TM=K(function()while true do local H8=(ot[YM]);local r8=(H8[5]);do YM=YM+1;end;do if not(r8>=64)then if not(r8<32)then do if not(r8>=48)then if r8>=40 then if not(r8<44)then if r8>=46 then do if r8~=47 then do(pM)[H8[4]]=H8[2]+H8[6];end;else pM[H8[4]][pM[H8[7]]]=H8[6];end;end;else if r8~=45 then pM[H8[4]][H8[2]]=H8[6];else(pM)[H8[4]]=s(H8[2],H8[6]);end;end;else if not(r8<42)then if r8~=43 then(pM)[H8[4]]=pM[H8[7]]+H8[6];else local HT=H8[4];do IM=HT+H8[7]-1;end;do pM[HT]=pM[HT](Z(pM,HT+1,IM));end;IM=HT;end;else if r8~=41 then pM[H8[4]]=Y(H8[2],H8[6]);else if H8[9]==250 then YM=YM-1;(ot)[YM]={[7]=(H8[7]-3)%256,[5]=49,[4]=(H8[4]-3)%256};elseif H8[9]~=104 then(pM)[H8[4]]=sM[rt+1];else YM=YM-1;ot[YM]={[5]=100,[4]=(H8[4]-195)%256,[7]=(H8[7]-HP)%256};end;end;end;end;else if not(r8>=36)then if not(r8>=34)then if r8~=33 then local PX=H8[4];(pM[PX])(pM[PX+1]);IM=PX-1;else do if H8[9]~=106 then do repeat local SJ,XJ=Pt,(pM);if not(#SJ>0)then else local Cv={};do for kd,ld in n,SJ do for e5,B5 in n,ld do do if not(B5[1]==XJ and B5[2]>=0)then else local Or=B5[2];do if not(not Cv[Or])then else Cv[Or]={XJ[Or]};end;end;do(B5)[1]=Cv[Or];end;B5[2]=1;end;end;end;end;end;end;until MZ;end;return RZ,H8[4],IM;else YM=YM-1;ot[YM]={[5]=120,[4]=(H8[4]-UP)%256,[7]=(H8[7]-104)%256};end;end;end;else if r8==35 then if not(not(H8[2]<H8[6]))then else YM=YM+1;end;else local Bu=(H8[4]);for Yr=Bu,Bu+(H8[7]-1)do(pM)[Yr]=sM[rt+(Yr-Bu)+1];end;end;end;else if not(r8<38)then if r8==39 then if pM[H8[7]]==H8[6]then else YM=YM+1;end;else pM[H8[4]]=H8[2]~=pM[H8[9]];end;else if r8==37 then pM[H8[4]]=d(H8[2],H8[6]);else do(pM)[H8[4]]=pM[H8[7]][pM[H8[9]]];end;end;end;end;end;else if not(r8<56)then if not(r8<60)then if not(r8<62)then do if r8~=63 then if pM[H8[7]]==pM[H8[9]]then else YM=YM+1;end;else do(pM)[H8[4]]=pM[H8[7]]*pM[H8[9]];end;end;end;else if r8==61 then(pM)[H8[4]]={};else if pM[H8[7]]~=pM[H8[9]]then else do YM=YM+1;end;end;end;end;else do if not(r8>=58)then if r8==57 then(pM)[H8[4]]=H8[2]>=H8[6];else pM[H8[4]]=s(pM[H8[7]],H8[6]);end;else do if r8~=59 then if not(pM[H8[7]]<H8[6])then else YM=YM+1;end;else local Om=ft[H8[7]];do Om[1][Om[2]]=pM[H8[4]];end;end;end;end;end;end;else if not(r8>=52)then if not(r8>=50)then if r8==49 then if H8[9]~=131 then do(pM)[H8[4]]=-pM[H8[7]];end;else YM=YM-1;ot[YM]={[5]=54,[4]=(H8[4]-97)%256,[9]=(H8[7]-97)%256};end;else pM[H8[4]]=yZ[H8[7]];end;else do if r8==51 then(pM)[H8[4]]=pM[H8[7]]%H8[6];else(pM)[H8[4]]=H8[2]<=H8[6];end;end;end;else do if not(r8>=54)then if r8==53 then(pM)[H8[4]]=MZ;else do pM[H8[4]]=pM[H8[7]]==pM[H8[9]];end;end;else if r8~=55 then if H8[7]~=246 then local fE=H8[4];local qE=(fE+3);local dE=(fE+2);local JE=({pM[fE](pM[fE+1],pM[dE])});for NA=1,H8[9]do(pM)[dE+NA]=JE[NA];end;local RE=(pM[qE]);if RE==NZ then do YM=YM+1;end;else pM[dE]=RE;end;else do YM=YM-1;end;do ot[YM]={[4]=(H8[4]-201)%256,[5]=22,[9]=(H8[9]-201)%256};end;end;else pM[H8[4]]=pM[H8[7]]-H8[6];end;end;end;end;end;end;end;else do if r8>=16 then if r8<24 then if not(r8>=20)then if not(r8>=18)then if r8~=17 then(pM[H8[4]])[pM[H8[7]]]=pM[H8[9]];else pM[H8[4]]=H8[2]==H8[6];end;else if r8==19 then if not(pM[H8[7]]<H8[6])then YM=YM+1;end;else(pM)[H8[4]]=pM[H8[7]]<pM[H8[9]];end;end;else if not(r8>=22)then if r8==21 then(pM)[H8[4]]=pM[H8[7]][H8[6]];else repeat local K5,p5=Pt,pM;do if not(#K5>0)then else local Kn=({});for MW,lW in n,K5 do for EG,HG in n,lW do if not(HG[1]==p5 and HG[2]>=0)then else local IB=HG[2];if not Kn[IB]then Kn[IB]={p5[IB]};end;(HG)[1]=Kn[IB];HG[2]=1;end;end;end;end;end;until MZ;do return MZ,H8[4],1;end;end;else if r8~=23 then if H8[7]~=140 then if not(pM[H8[4]])then else YM=YM+1;end;else YM=YM-1;ot[YM]={[4]=(H8[4]-178)%256,[5]=110,[7]=(H8[9]-178)%256};end;else pM[H8[4]]=s(pM[H8[7]],pM[H8[9]]);end;end;end;else if not(r8<28)then do if not(r8>=30)then if r8~=29 then local HA=(H8[4]);local LA,dA=HA+1,(HA+2);pM[HA]=UZ(C(pM[HA]),QP);pM[LA]=UZ(C(pM[LA]),CP);(pM)[dA]=UZ(C(pM[dA]),KP);do pM[HA]=pM[HA]-pM[dA];end;YM=H8[8];else pM[H8[4]]=l(H8[2],pM[H8[9]]);end;else if r8~=31 then if H8[9]==155 then YM=YM-1;ot[YM]={[7]=(H8[7]-50)%256,[4]=(H8[4]-50)%256,[5]=76};elseif H8[9]==yP then YM=YM-1;do ot[YM]={[4]=(H8[4]-102)%256,[9]=(H8[7]-102)%256,[5]=54};end;elseif H8[9]~=41 then do(pM)[H8[4]]=pM[H8[7]];end;else YM=YM-1;ot[YM]={[7]=(H8[7]-230)%256,[4]=(H8[4]-230)%256,[5]=33};end;else if not(not pM[H8[4]])then else YM=YM+1;end;end;end;end;else if r8<26 then if r8==25 then local oX=H8[4];pM[oX](pM[oX+1],pM[oX+2]);do IM=oX-1;end;else pM[H8[4]]=H8[2]<=pM[H8[9]];end;else if r8~=27 then if H8[9]~=62 then do(pM)[H8[4]]=not pM[H8[7]];end;else do YM=YM-1;end;(ot)[YM]={[5]=83,[4]=(H8[4]-41)%256,[7]=(H8[7]-41)%256};end;else do pM[H8[4]]=H8[2]^pM[H8[9]];end;end;end;end;end;else do if not(r8>=8)then if r8<4 then do if not(r8<2)then if r8~=3 then IM=H8[4];(pM[IM])();do IM=IM-1;end;else local yu=H8[7];pM[H8[4]]=pM[yu]..pM[yu+1];end;else if r8~=1 then NM[H8[10]]=pM[H8[4]];else do pM[H8[4]]=H8[2]+pM[H8[9]];end;end;end;end;else if not(r8<6)then if r8~=7 then pM[H8[4]]=pM[H8[7]]/pM[H8[9]];else do(pM)[H8[4]]=o(H8[2],H8[6]);end;end;else do if r8==5 then pM[H8[4]]={Z({},1,H8[7])};else local JK=H8[4];local LK=(pM[JK+2]);local tK=pM[JK]+LK;do(pM)[JK]=tK;end;do if not(LK>0)then if not(tK>=pM[JK+1])then else YM=H8[8];(pM)[JK+3]=tK;end;else if tK<=pM[JK+1]then YM=H8[8];(pM)[JK+3]=tK;end;end;end;end;end;end;end;else do if not(r8<12)then if not(r8<14)then if r8==15 then local xo=H8[7];local ao=(pM[xo]);for Wl=xo+1,H8[9]do ao=ao..pM[Wl];end;pM[H8[4]]=ao;else do if not(not(H8[2]<=pM[H8[9]]))then else YM=YM+1;end;end;end;else if r8~=13 then do pM[H8[4]]=d(pM[H8[7]],H8[6]);end;else if H8[9]==215 then YM=YM-1;ot[YM]={[5]=83,[7]=(H8[7]-LP)%256,[4]=(H8[4]-211)%256};elseif H8[9]~=121 then repeat local V5,u5,F5=Pt,pM,H8[4];if#V5>0 then local ZK=({});for Ea,ua in n,V5 do for Ji,Ei in n,ua do if not(Ei[1]==u5 and Ei[2]>=F5)then else local Gh=(Ei[2]);do if not ZK[Gh]then(ZK)[Gh]={u5[Gh]};end;end;Ei[1]=ZK[Gh];Ei[2]=1;end;end;end;end;until MZ;else do YM=YM-1;end;do ot[YM]={[7]=(H8[7]-223)%256,[4]=(H8[4]-TP)%jP,[5]=83};end;end;end;end;else if not(r8>=10)then do if r8~=9 then pM[H8[4]]=H8[2]-pM[H8[9]];else pM[H8[4]]=H8[2]/H8[6];end;end;else do if r8~=11 then(yZ)[H8[7]]=pM[H8[4]];else pM[H8[4]]=o(H8[2],pM[H8[9]]);end;end;end;end;end;end;end;end;end;end;else if not(r8>=96)then if not(r8>=80)then if not(r8<72)then if not(r8<76)then if not(r8<78)then if r8==79 then do if not(pM[H8[7]]<=H8[6])then else do YM=YM+1;end;end;end;else local Sf=H8[4];pM[Sf](Z(pM,Sf+1,IM));do IM=Sf-1;end;end;else if r8==77 then pM[H8[4]]=NM[H8[10]];else if H8[9]==221 then YM=YM-1;do(ot)[YM]={[4]=(H8[4]-58)%256,[7]=(H8[7]-58)%256,[5]=110};end;elseif H8[9]~=179 then repeat local km,Xm=Pt,pM;if not(#km>0)then else local Ox=({});do for J_,S_ in n,km do for wV,JV in n,S_ do do if not(JV[1]==Xm and JV[2]>=0)then else local iw=(JV[2]);if not(not Ox[iw])then else do Ox[iw]={Xm[iw]};end;end;(JV)[1]=Ox[iw];do JV[2]=1;end;end;end;end;end;end;end;until MZ;local mq=H8[4];return RZ,mq,mq;else YM=YM-1;ot[YM]={[7]=(H8[7]-204)%256,[5]=120,[4]=(H8[4]-204)%256};end;end;end;else if not(r8>=74)then do if r8==73 then pM[H8[4]]=H8[2]>=pM[H8[9]];else local YE=H8[2]/pM[H8[9]];(pM)[H8[4]]=YE-YE%1;end;end;else if r8~=75 then local DH=Lt[H8[8]];local SH=(NZ);local CH=(DH[5]);do if not(CH>0)then else SH={};for M3=0,CH-1 do local Y3=(ot[YM]);local y3=Y3[5];if y3~=30 then do SH[M3]=ft[Y3[7]];end;else do(SH)[M3]={pM,Y3[7]};end;end;do YM=YM+1;end;end;(A)(Pt,SH);end;end;do(pM)[H8[4]]=QZ(DH,NM,SH);end;else pM[H8[4]]=H8[2]^H8[6];end;end;end;else if r8>=68 then if not(r8<70)then if r8==71 then do(pM)[H8[4]]=pM[H8[7]]>pM[H8[9]];end;else pM[H8[4]]=H8[10];end;else do if r8==69 then(pM)[H8[4]]=pM[H8[7]]^pM[H8[9]];else local qw=H8[4];local Fw,dw=pM[H8[7]],(pM[H8[9]]);(pM)[qw+1]=Fw;pM[qw]=Fw[dw];end;end;end;else if not(r8<66)then if r8~=67 then(pM)[H8[4]]=pM[H8[7]]~=pM[H8[9]];else do if H8[9]~=132 then do for H6=H8[4],H8[7]do(pM)[H6]=NZ;end;end;else YM=YM-1;(ot)[YM]={[4]=(H8[4]-36)%256,[7]=(H8[7]-36)%256,[5]=94};end;end;end;else if r8~=65 then local AW=(ft[H8[7]]);do pM[H8[4]]=AW[1][AW[2]];end;else local Ww,Fw=H8[4],((H8[9]-1)*50);for x8=1,H8[7]do(pM[Ww])[Fw+x8]=pM[Ww+x8];end;end;end;end;end;else do if not(r8>=88)then if r8<84 then if r8<82 then if r8~=81 then local Ar=(H8[4]);(pM)[Ar]=pM[Ar](pM[Ar+1]);IM=Ar;else(pM)[H8[4]]=pM[H8[7]]>H8[6];end;else do if r8==83 then local lt,xt=H8[4],(WM-rt);if not(xt<0)then else xt=-1;end;for zU=lt,lt+xt do pM[zU]=sM[rt+(zU-lt)+1];end;do IM=lt+xt;end;else(pM)[H8[4]]=H8[2]<pM[H8[9]];end;end;end;else if not(r8>=86)then do if r8==85 then pM[H8[4]]=pM[H8[7]]==H8[6];else do(pM[H8[4]])[H8[2]]=pM[H8[9]];end;end;end;else if r8~=87 then pM[H8[4]]=H8[2]~=H8[6];else local Wi=H8[4];IM=Wi+H8[7]-1;pM[Wi](Z(pM,Wi+1,IM));IM=Wi-1;end;end;end;else do if not(r8>=92)then do if not(r8>=90)then do if r8==89 then do(pM)[H8[4]]=pM[H8[7]]<=pM[H8[9]];end;else local Fs=H8[4];local qs=pM[H8[7]];(pM)[Fs+1]=qs;do pM[Fs]=qs[H8[6]];end;end;end;else if r8~=91 then if not(not(pM[H8[7]]<=pM[H8[9]]))then else YM=YM+1;end;else do YM=H8[8];end;end;end;end;else if not(r8<94)then if r8~=95 then do if H8[9]~=111 then(pM)[H8[4]]=NZ;else YM=YM-1;do ot[YM]={[9]=(H8[7]-78)%256,[4]=(H8[4]-78)%256,[5]=22};end;end;end;else do(pM)[H8[4]]=s(H8[2],pM[H8[9]]);end;end;else if r8~=93 then local Ny=(H8[2]/H8[6]);pM[H8[4]]=Ny-Ny%1;else pM[H8[4]]=pM[H8[7]]>=pM[H8[9]];end;end;end;end;end;end;end;else if not(r8>=112)then if not(r8>=104)then if r8>=100 then if not(r8>=102)then do if r8==101 then if not(not(H8[2]<=H8[6]))then else YM=YM+1;end;else do if H8[9]==50 then do YM=YM-1;end;(ot)[YM]={[4]=(H8[4]-224)%256,[5]=76,[7]=(H8[7]-224)%256};else repeat local XG,KG=Pt,(pM);if not(#XG>0)then else local sS=({});for CN,oN in n,XG do for SX,qX in n,oN do do if not(qX[1]==KG and qX[2]>=0)then else local nH=(qX[2]);do if not(not sS[nH])then else(sS)[nH]={KG[nH]};end;end;(qX)[1]=sS[nH];(qX)[2]=1;end;end;end;end;end;until MZ;return;end;end;end;end;else if r8==103 then pM[H8[4]]=H8[2]-H8[6];else do(pM)[H8[4]]=Y(H8[2],pM[H8[9]]);end;end;end;else if not(r8<98)then if r8~=99 then(pM)[H8[4]]=pM[H8[7]]~=H8[6];else local Fv,rv=H8[4],((H8[9]-1)*50);for d_=1,IM-Fv do(pM[Fv])[rv+d_]=pM[Fv+d_];end;end;else if r8==97 then do(pM)[H8[4]]=pM[H8[7]]%pM[H8[9]];end;else(pM)[H8[4]]=l(H8[2],H8[6]);end;end;end;else if not(r8>=108)then if not(r8>=106)then if r8==105 then(pM)[H8[4]]=d(pM[H8[7]],pM[H8[9]]);else pM[H8[4]]=pM[H8[7]]-pM[H8[9]];end;else if r8==107 then local yk=H8[7];local xk=(H8[4]);local Xk=(H8[9]);if yk==0 then else IM=xk+yk-1;end;local lk,Vk=NZ,NZ;if yk~=1 then lk,Vk=b(pM[xk](Z(pM,xk+1,IM)));else lk,Vk=b(pM[xk]());end;do if Xk==1 then IM=xk-1;else do if Xk~=0 then lk=xk+Xk-2;IM=lk+1;else lk=lk+xk-1;do IM=lk;end;end;end;local DS=0;for eT=xk,lk do DS=DS+1;do(pM)[eT]=Vk[DS];end;end;end;end;else local rz=(pM[H8[7]]/H8[6]);(pM)[H8[4]]=rz-rz%1;end;end;else if not(r8<110)then if r8==111 then repeat local kJ,WJ=Pt,(pM);do if not(#kJ>0)then else local jp={};for vn,Tn in n,kJ do for L1,h1 in n,Tn do if not(h1[1]==WJ and h1[2]>=0)then else local xR=(h1[2]);do if not(not jp[xR])then else jp[xR]={WJ[xR]};end;end;(h1)[1]=jp[xR];h1[2]=1;end;end;end;end;end;until MZ;return MZ,H8[4],0;else do if H8[9]~=7 then do repeat local e7,S7=Pt,pM;do if#e7>0 then local w2=({});for NC,wC in n,e7 do for TD,xD in n,wC do do if not(xD[1]==S7 and xD[2]>=0)then else local ro=(xD[2]);if not(not w2[ro])then else w2[ro]={S7[ro]};end;(xD)[1]=w2[ro];xD[2]=1;end;end;end;end;end;end;until MZ;end;local ca=(H8[4]);return RZ,ca,ca+H8[7]-2;else YM=YM-1;(ot)[YM]={[4]=(H8[4]-59)%256,[5]=30,[7]=(H8[7]-59)%256};end;end;end;else if r8==gZ then local og=(pM[H8[7]]);if not(not og)then do pM[H8[4]]=og;end;else YM=YM+1;end;else local S1=H8[4];pM[S1]=pM[S1](pM[S1+1],pM[S1+2]);IM=S1;end;end;end;end;else if not(r8<120)then do if not(r8<124)then if not(r8<126)then if not(r8<127)then if r8==128 then(pM)[H8[4]]=H8[2]<H8[6];else pM[H8[4]]=H8[10];end;else local pN=(H8[4]);pM[pN]=pM[pN](Z(pM,pN+1,IM));IM=pN;end;else if r8~=125 then(pM)[H8[4]]=w(pM[H8[7]]);else if pM[H8[7]]~=H8[6]then else YM=YM+1;end;end;end;else if not(r8>=122)then if r8~=eZ then if H8[9]~=209 then(pM)[H8[4]]=#pM[H8[7]];else YM=YM-1;do(ot)[YM]={[4]=(H8[4]-204)%256,[5]=31,[9]=(H8[7]-204)%256};end;end;else do pM[H8[4]]=pM[H8[7]]+pM[H8[9]];end;end;else do if r8==123 then do pM[H8[4]]=H8[2]>pM[H8[9]];end;else IM=H8[4];(pM)[IM]=pM[IM]();end;end;end;end;end;else if not(r8<116)then if r8<118 then do if r8==117 then repeat local JL,yL=Pt,pM;do if not(#JL>0)then else local G7=({});for zF,HF in n,JL do for T3,e3 in n,HF do if not(e3[1]==yL and e3[2]>=0)then else local la=(e3[2]);if not(not G7[la])then else do G7[la]={yL[la]};end;end;e3[1]=G7[la];e3[2]=1;end;end;end;end;end;until MZ;local CG=(H8[4]);IM=CG+1;return MZ,CG,2;else if not(pM[H8[7]]<pM[H8[9]])then YM=YM+1;end;end;end;else do if r8~=119 then pM[H8[4]]=MZ;do YM=YM+1;end;else(pM)[H8[4]]=Y(pM[H8[7]],H8[6]);end;end;end;else do if not(r8<114)then if r8~=115 then local N_=H8[4];local Y_=(H8[7]);IM=N_+Y_-1;repeat local Yt,Nt=Pt,pM;if#Yt>0 then local Bt=({});for lw,Cw in n,Yt do for mr,yr in n,Cw do do if not(yr[1]==Nt and yr[2]>=0)then else local C8=(yr[2]);do if not Bt[C8]then(Bt)[C8]={Nt[C8]};end;end;do yr[1]=Bt[C8];end;do yr[2]=1;end;end;end;end;end;end;until MZ;do return MZ,N_,Y_;end;else(pM)[H8[4]]=RZ;end;else do if r8==113 then(pM)[H8[4]]=d(H8[2],pM[H8[9]]);else pM[H8[4]]=H8[10];end;end;end;end;end;end;end;end;end;end;end;end);if not(LM)then do if L(mM)~=hP then j(mM,0);else do if not(X(mM,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;if X(mM,"^.-:%d+: ")then j("Luraph Script:"..(at[YM-1]or"(internal)")..": "..T(mM),0);else(j)(mM,0);end;end;end;else if mM then if TM==1 then return pM[iM]();else do return pM[iM](Z(pM,iM+1,IM));end;end;elseif not(iM)then else do return Z(pM,iM,TM);end;end;end;end;do if not(r)then else(r)(Gt,et);end;end;do return Gt;end;end;LZ=4;end;end;else if LZ~=2 then g=1;LZ=2;else yZ={};LZ=0;end;end;end;local function CZ()local wg=3;local og,Mg,Ng,zg,vg,Pg,Qg=NZ,NZ,NZ,NZ,NZ,NZ,NZ;while wg~=8 do if not(wg<=3)then do if not(wg<=5)then if wg==6 then do Pg=P();end;wg=4;else Mg={};do wg=2;end;end;else if wg==4 then Qg=P()~=0;wg=8;else do og={{},NZ,{},NZ,NZ,{},NZ,NZ,NZ};end;wg=7;end;end;end;else if not(wg<=1)then do if wg~=2 then wg=5;else Ng={};wg=0;end;end;else if wg~=0 then vg=J()-mP;do wg=6;end;else zg=1;wg=1;end;end;end;end;do for xY=1,vg do local TY=(1);local lY,gY=NZ,NZ;do while(MZ)do if TY~=0 then TY=0;else do gY=P();end;do break;end;end;end;end;TY=0;while TY~=3 do if not(TY<=0)then if TY==1 then if gY==241 then lY=J();elseif gY==12 then lY=MZ;elseif gY==242 then lY=u()+J();elseif gY==30 then lY=u();elseif gY==68 then lY=u();elseif gY==251 then lY=RZ;elseif gY==86 then lY=H(D(Pg),J());elseif gY==229 then lY=H(D(Pg),4);elseif gY~=0 then else lY=I();end;do TY=1;end;else if gY==241 then lY=J();elseif gY==12 then lY=MZ;elseif gY==242 then lY=u()+J();elseif gY==30 then lY=u();elseif gY==68 then lY=u();elseif gY==251 then lY=RZ;elseif gY==86 then lY=H(D(Pg),J());elseif gY==229 then lY=H(D(Pg),4);elseif gY~=0 then else lY=I();end;TY=3;end;else if gY==241 then lY=J();elseif gY==12 then do lY=MZ;end;elseif gY==qP then lY=u()+J();elseif gY==30 then lY=u();elseif gY==68 then lY=u();elseif gY==251 then lY=RZ;elseif gY==86 then lY=H(D(Pg),J());elseif gY==229 then lY=H(D(Pg),4);elseif gY~=0 then else lY=I();end;TY=3;end;end;(Mg)[xY-1]=zg;local dY={lY,{}};TY=0;while TY~=3 do if not(TY<=0)then if TY~=1 then if Qg then(e)[g]=dY;g=g+1;end;TY=3;else zg=zg+1;TY=2;end;else(Ng)[zg]=dY;TY=1;end;end;end;end;local Tg=(J());for Gh=1,Tg do local Nh=J();local hh,Rh,Oh=0,NZ,(NZ);repeat if hh~=0 then Oh=J();hh=2;else Rh=J();hh=1;end;until hh>=2;for zG=Nh,Rh do(og[3])[zG]=Oh;end;end;og[17]=J();wg=2;local Ig,Bg,pg=NZ,NZ,(NZ);while wg~=6 do if not(wg<=2)then if wg<=3 then(og)[15]=J();wg=1;else if wg~=4 then do for dI=1,Ig do local LI=(1);local jI,cI=NZ,(NZ);repeat do if LI~=0 then do jI={NZ,NZ,NZ,NZ,NZ,NZ,NZ,NZ,NZ,NZ};end;LI=0;else do cI=G(Bg);end;do LI=2;end;end;end;until LI>=2;LI=9;while LI~=10 do do if not(LI<=4)then if not(LI<=6)then if not(LI<=7)then if LI~=8 then(jI)[4]=R(8,6,cI);LI=2;else(jI)[5]=P();do LI=1;end;end;else jI[8]=R(18,14,cI);LI=1;end;else do if LI~=5 then(jI)[5]=P();do LI=6;end;else(jI)[8]=R(18,14,cI);do LI=0;end;end;end;end;else if not(LI<=1)then if not(LI<=2)then if LI~=3 then jI[13]=R(27,13,cI);LI=4;else(jI)[20]=R(16,30,cI);do LI=5;end;end;else do jI[7]=R(9,23,cI);end;LI=8;end;else if LI==0 then do jI[9]=R(9,14,cI);end;LI=10;else jI[13]=R(27,13,cI);LI=3;end;end;end;end;end;og[6][dI]=jI;end;end;wg=3;else for yp=1,pg do(og[1])[yp-1]=CZ();end;wg=6;end;end;else if wg<=0 then Bg=P();do wg=5;end;else do if wg==1 then do pg=J();end;wg=4;else Ig=J()-133768;wg=0;end;end;end;end;end;(og)[15]=P();(og)[8]=P();og[12]=P();wg=4;local lg=NZ;do while wg<=5 do if not(wg<=2)then do if wg<=3 then og[4]=P();wg=2;else if wg~=4 then do og[9]=R(1,2,lg)~=0;end;wg=3;else lg=P();wg=1;end;end;end;else do if not(wg<=0)then if wg~=1 then(og)[5]=P();do wg=0;end;else do(og)[7]=R(1,1,lg)~=0;end;wg=5;end;else(og)[2]=P();wg=6;end;end;end;end;end;local Og=W[og[2]];do for we=1,Ig do local Ie,Ve=NZ,(NZ);for he=0,1 do if he~=0 then Ve=Og[Ie[5]];else Ie=og[6][we];end;end;local oe=Ve==14;local be=(1);while(MZ)do if be~=0 then if Ve==5 then local rw=(Mg[Ie[8]]);local Yw=Ng[rw];if Yw then local Xf,Rf=2,NZ;while Xf<=2 do do if not(Xf<=0)then if Xf~=1 then Ie[10]=Yw[1];Xf=1;else Rf=Yw[2];do Xf=0;end;end;else do Rf[#Rf+1]={Ie,10};end;Xf=3;end;end;end;end;end;do be=0;end;else if(Ve==11 or oe)and Ie[9]>255 then do Ie[3]=MZ;end;local mo,no=NZ,NZ;for Vo=0,2 do do if not(Vo<=0)then if Vo~=1 then if not(no)then else local sN=(NZ);local KN=(0);while KN<2 do if KN~=0 then do sN=no[2];end;KN=2;else do(Ie)[6]=no[1];end;KN=1;end;end;sN[#sN+1]={Ie,6};end;else no=Ng[mo];end;else mo=Mg[Ie[9]-256];end;end;end;end;do break;end;end;end;do for xJ=0,1 do if xJ==0 then if not((Ve==12 or oe)and Ie[7]>255)then else local UK=(0);local AK,nK=NZ,NZ;repeat if not(UK<=1)then if UK~=2 then do nK=Ng[AK];end;UK=2;else if nK then local K9=NZ;for n5=0,2 do if not(n5<=0)then if n5~=1 then(K9)[#K9+1]={Ie,2};else K9=nK[2];end;else(Ie)[2]=nK[1];end;end;end;UK=4;end;else if UK~=0 then AK=Mg[Ie[7]-256];UK=3;else(Ie)[1]=MZ;UK=1;end;end;until UK==4;end;else if Ve~=0 then else(Ie)[8]=we+(Ie[8]-131071)+1;end;end;end;end;end;end;return og;end;LZ=0;local KZ=NZ;while(MZ)do if not(LZ<=1)then if LZ~=2 then return QZ(KZ,p,NZ)(...);else e=NZ;do LZ=3;end;end;else if LZ~=0 then(yZ)[2]=e;LZ=2;else KZ=CZ();LZ=1;end;end;end;end)(223,"\98\120\111\114",242,133,256,"\96\102\111\114\96\32\108\105\109\105\116\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114","\115\117\98",tonumber,string.gsub,"\46\46",195,"LPH}bit32,"\108\115\104\105\102\116",table,assert,"\110","\98\111\114",false,"\95\95\109\111\100\101",nil,next,getfenv,rawset,"\115\116\114\105\110\103",109,211,104,"\35",string,rawget,"\98\97\110\100","",table.unpack,"\96\102\111\114\96\32\115\116\101\112\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114",true,select,"\114\101\112","\98\110\111\116","\118",pcall,121,"\109\97\116\99\104",240,"\105\110\115\101\114\116",133753,tostring,"\96\102\111\114\96\32\105\110\105\116\105\97\108\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114","\98\121\116\101",bit,string.char,7997,setmetatable,error,unpack,"\114\115\104\105\102\116",setfenv,type,...);
